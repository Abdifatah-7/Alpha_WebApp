@model ProjectsViewModel

@{
    Layout = "_BackOfficeWrapperLayout";
    ViewData["Title"] = "Projects";
}

<div id="projects" class="middle">
    <div class="project-header">
        <h2>@ViewData["Title"] </h2>
        <button class="btn" data-type="modal" data-target="#add-project-modal">
            <i class="fa-duotone fa-solid fa-plus"></i>
            <span>Add Projects</span>
        </button>
    </div>

    <div class="tab-bar">
        <a class="nav-tab active" href="#" data-filter="all">
            ALL [@Model.Projects.Count()]
        </a>
        <a class="nav-tab" href="#" data-filter="started">
            STARTED [@Model.Projects.Count(p => p.StatusName == "Started")]
        </a>
        <a class="nav-tab" href="#" data-filter="completed">
            COMPLETED [@Model.Projects.Count(p => p.StatusName == "Completed")]
        </a>
    </div>



    <div class="project-list" data-project-id="2">

        @if (Model.Projects != null && Model.Projects.Any())
        {
            @foreach (var project in Model.Projects)
            {
                @await Html.PartialAsync("ListItems/_ProjectListItemPartial", project)
            }
        }



    </div>

    @await Html.PartialAsync("Modals/_AddProjectModalPartial", Model.AddProjectFormData)
    @await Html.PartialAsync("Modals/_EditProjectModalPartial", Model.EditProjectFormData)
</div>